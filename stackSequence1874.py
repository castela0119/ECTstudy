import sys

# 입력값 n
n = int(sys.stdin.readline())

# 스택
stack = []

# 스택에 넣는 값
cnt = 1

# 결과를 모으는 리스트
result = []

for i in range(n):
    # 값 입력
    num = int(sys.stdin.readline())

    # num값까지 스택에 push
    while cnt <= num:
        stack.append(cnt)
        result.append('+')
        cnt += 1
    
    # 스택 맨 위에 있는 값이 num이면 pop
    if stack[-1] == num:
        stack.pop()
        result.append('-')
    
    else:               # pop 할때 선형적으로 꺼내지지 않는 경우
        print('NO')
        exit(0)

for i in result:
    print(i)


# 스택 수열이 무슨의미일까?

# 1 ~ n 까지의 수를 스택에 넣었다가 뽑아 늘어놓음으로서 하나의 수열을 만들 수 있다.

# 이때 stack 에 push 하는 순서는 반드시 오름 차순을 지키도록하자.

# 스택을 이용해 그 수열을 만들 수 있는지 없는지

# 만들 수 있다면 어떤 순서로 push 와 pop 을 수행해야 하는지 알아 낼 수 있다.

# 첫 줄에 n 
# 둘째 줄에 1 이상 n 이하의 정수가 하나씩 주어진다.

# 8

# [4(+), 3(+), 6(+), 8(+), 7(-), 5, 2, 1]

# 4 입력시 [1, 2, 3, 4] # pop [4]

# 3 입력시 [1, 2, 3] # pop [4, 3]

# 6 입력시[1, 2] -> [1, 2, 3, 4, 5, 6] # pop [4, 3, 6]

# 8 입력시 [1, 2, 5, 7, 8] # pop [4, 3, 6, 8]

# [1, 2, 5, 7] # pop [4, 3, 6, 8, 7]
# [1, 2, 5] # pop [4, 3, 6, 8, 7, 5]
# [1, 2] # pop [4, 3, 6, 8, 7, 5, 2]
# [1] # pop [4, 3, 6, 8, 7, 5, 2, 1]

# 빈 list 2개를 만들어줘야 한다.

# 마치 에너지 게이지가 찼다가 줄어들었다 하는 모습 같음 (완전히 같은 모습은 아님)

# 어떻게 풀어야 할까?

# [1] -> pop [1]
# [2] -> pop [1, 2]

# [3, 4, 5] -> pop [1, 2, 5]
# [3, 4] -> 